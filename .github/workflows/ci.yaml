name: "🩺 Continuous Integration (CI)"

on:
  workflow_call:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tests:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v2

      - name: 🛠️ Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23.3

      - name: 💾 Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: 🔎 Verify Dependencies
        run: go mod verify

      - name: 🏗️ Build
        run: go build -v ./...

      - name: 🕵️‍♂️ Run go vet
        run: go vet ./...

      - name: 📦 Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: 🧹 Run staticcheck
        run: staticcheck ./...

      - name: 🧪 Run Tests
        run: go test -race ./...

  build-and-push:
    name: 🔧 Build Docker Image
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🤖 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short,prefix=

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🚀 Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
