services:
  db:
    image: postgres:16.3
    container_name: postgres-db
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
  minio:
    image: bitnami/minio:2024
    container_name: minio
    env_file: .env
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_USE_SSL=no
      - MINIO_DEFAULT_BUCKETS
      - MINIO_SERVER_URL=http://minio:9000
      - MINIO_SCHEME=http
      - MINIO_SKIP_CLIENT=yes
      - MINIO_CONSOLE_PORT_NUMBER=9001
    ports:
      - "9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio_data:/data
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - traefik_default
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.minio.entrypoints=https"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=letsEncrypt"
      - "traefik.http.services.minio.loadbalancer.server.url=http://minio:9000"
  backend:
    image: ghcr.io/k5sha/ticketo-backend:latest
    container_name: ticketo-api
    env_file: .env
    environment:
      - ENV
      - ADDR
      - EXTERNAL_URL
      - FRONTEND_URL
      - DB_ADDR
      - AUTH_BASIC_USERNAME
      - AUTH_BASIC_PASSWORD
      - AUTH_TOKEN_SECRET
      - AUTH_TOKEN_EXPIRATION
      - AUTH_TOKEN_HOST
      - MAIL_TOKEN_EXPIRATION
      - MAIL_FROM_EMAIL
      - BREVO_USERNAME
      - BREVO_PASSWORD
      - BREVO_HOST
      - BREVO_PORT
      - S3_BUCKET_NAME
      - MINIO_ENDPOINT
      - MINIO_ENDPOINT_PUBLIC
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_SSL
      - PAYMENT_PUBLIC_KEY
      - PAYMENT_PRIVATE_KEY
      - PAYMENT_FRONTEND_URL
      - PAYMENT_SERVER_URL
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - traefik_default
      - app-network
    volumes:
      - ./cmd/migrate/migrations:/app/cmd/migrate/migrations
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticketo-api.rule=Host(`api.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-api.entrypoints=https"
      - "traefik.http.routers.ticketo-api.tls=true"
      - "traefik.http.routers.ticketo-api.tls.certresolver=letsEncrypt"
      - "traefik.http.services.ticketo-api.loadbalancer.server.url=http://ticketo-api:8080"
  frontend:
    image: ghcr.io/k5sha/ticketo-frontend:latest
    container_name: ticketo-frontend
    env_file: .env
    environment:
      - VITE_API_URL
      - VITE_APP_NAME
    depends_on:
      - backend
    networks:
      - traefik_default
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticketo-front.rule=Host(`tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-front.entrypoints=https"
      - "traefik.http.routers.ticketo-front.tls=true"
      - "traefik.http.routers.ticketo-front.tls.certresolver=letsEncrypt"
      - "traefik.http.services.ticketo-front.loadbalancer.server.url=http://ticketo-frontend:80"

volumes:
  db-data:
  minio_data:
  ts-data:

networks:
  traefik_default:
    external: true
  app-network:
    driver: bridge
  
