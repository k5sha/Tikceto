services:  
  db:
    image: postgres:16.3
    container_name: postgres-db
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
  minio:
    image: bitnami/minio:latest
    container_name: minio
    env_file: .env
    environment:
      - MINIO_SKIP_CLIENT=yes
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_USE_SSL=no
      - MINIO_DEFAULT_BUCKETS
      - MINIO_SERVER_URL=http://minio:9000
      - MINIO_SCHEME=http
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - traefik-net
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.minio.entrypoints=https"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.minio-http.rule=Host(`minio.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.minio-http.entrypoints=http"
      - "traefik.http.routers.minio-http.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"

  backend:
    image: ghcr.io/k5sha/ticketo-backend:latest
    container_name: ticketo-api
    env_file: .env
    environment:
      - ENV
      - ADDR
      - EXTERNAL_URL
      - FRONTEND_URL
      - DB_ADDR
      - AUTH_BASIC_USERNAME
      - AUTH_BASIC_PASSWORD
      - AUTH_TOKEN_SECRET
      - AUTH_TOKEN_EXPIRATION
      - AUTH_TOKEN_HOST
      - MAIL_TOKEN_EXPIRATION
      - MAIL_FROM_EMAIL
      - BREVO_USERNAME
      - BREVO_PASSWORD
      - BREVO_HOST
      - BREVO_PORT
      - S3_BUCKET_NAME
      - MINIO_ENDPOINT
      - MINIO_ENDPOINT_PUBLIC
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_SSL
      - PAYMENT_PUBLIC_KEY
      - PAYMENT_PRIVATE_KEY
      - PAYMENT_FRONTEND_URL
      - PAYMENT_SERVER_URL
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - traefik-net
      - app-network
    volumes:
      - ./cmd/migrate/migrations:/app/cmd/migrate/migrations
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticketo-api.rule=Host(`api.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-api.entrypoints=https"
      - "traefik.http.routers.ticketo-api.tls=true"
      - "traefik.http.routers.ticketo-api.tls.certresolver=letsEncrypt"
      - "traefik.http.services.ticketo-api.loadbalancer.server.port=8080"
      - "traefik.http.routers.ticketo-api-http.rule=Host(`api.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-api-http.entrypoints=http"
      - "traefik.http.routers.ticketo-api-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  frontend:
    image: ghcr.io/k5sha/ticketo-frontend:latest
    container_name: ticketo-frontend
    env_file: .env
    environment:
      - VITE_API_URL
      - VITE_APP_NAME
    depends_on:
      - backend
    networks:
      - traefik-net
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticketo-frontend.rule=Host(`tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-frontend.entrypoints=https"
      - "traefik.http.routers.ticketo-frontend.tls=true"
      - "traefik.http.routers.ticketo-frontend.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.ticketo-frontend-http.rule=Host(`tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-frontend-http.entrypoints=http"
      - "traefik.http.routers.ticketo-frontend-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.services.ticketo-frontend.loadbalancer.server.port=3000"

  tailscale:
    image: tailscale/tailscale:latest
    container_name: ts-ticketo
    hostname: ts-ticketo
    env_file: .env
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=--advertise-exit-node --advertise-routes=172.20.0.0/24
    volumes:
      - ./ts-data:/var/lib/tailscale
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: unless-stopped

volumes:
  db-data:
  minio_data:
  ts-data:

networks:
  traefik-net:
    external: true
    name: traefik_default
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
