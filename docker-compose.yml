services:
  db:
    image: postgres:16.3
    container_name: postgres-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 5s
  minio:
    image: bitnami/minio:2024
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_USE_SSL=no
      - MINIO_DEFAULT_BUCKETS=${S3_BUCKET_NAME}
      - MINIO_SERVER_URL=http://minio:9000
      - MINIO_SCHEME=http
      - MINIO_SKIP_CLIENT=yes
      - MINIO_CONSOLE_PORT_NUMBER=9001
    ports:
      - "9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio_data:/data
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - traefik_default
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`minio.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.minio.entrypoints=https"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=letsEncrypt"
      - "traefik.http.services.minio.loadbalancer.server.url=http://minio:9000"
  backend:
    image: ${IMAGE_REF}
    container_name: ticketo-api
    environment:
      - ENV=${ENV}
      - ADDR=${ADDR}
      - EXTERNAL_URL=${EXTERNAL_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - DB_ADDR=${DB_ADDR}
      - AUTH_BASIC_USERNAME=${AUTH_BASIC_USERNAME}
      - AUTH_BASIC_PASSWORD=${AUTH_BASIC_PASSWORD}
      - AUTH_TOKEN_SECRET=${AUTH_TOKEN_SECRET}
      - AUTH_TOKEN_EXPIRATION=${AUTH_TOKEN_EXPIRATION}
      - AUTH_TOKEN_HOST=${AUTH_TOKEN_HOST}
      - MAIL_TOKEN_EXPIRATION=${MAIL_TOKEN_EXPIRATION}
      - MAIL_FROM_EMAIL=${MAIL_FROM_EMAIL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ENDPOINT_PUBLIC=${MINIO_ENDPOINT_PUBLIC}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SSL=${MINIO_SSL}
      - PAYMENT_PUBLIC_KEY=${PAYMENT_PUBLIC_KEY}
      - PAYMENT_PRIVATE_KEY=${PAYMENT_PRIVATE_KEY}
      - PAYMENT_FRONTEND_URL=${PAYMENT_FRONTEND_URL}
      - PAYMENT_SERVER_URL=${PAYMENT_SERVER_URL}
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - traefik_default
      - app-network
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ticketo-api.rule=Host(`api.tikceto.k5sha.xyz`)"
      - "traefik.http.routers.ticketo-api.entrypoints=https"
      - "traefik.http.routers.ticketo-api.tls=true"
      - "traefik.http.routers.ticketo-api.tls.certresolver=letsEncrypt"
      - "traefik.http.services.ticketo-api.loadbalancer.server.url=http://ticketo-api:8080"
volumes:
  db-data:
  minio_data:
  ts-data:


networks:
  traefik_default:
    external: true
  app-network:
    driver: bridge
