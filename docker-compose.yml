version: "3.9"

services:
  db:
    image: postgres:16.3
    container_name: postgres-db
    env_file: .env
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s

  minio:
    image: bitnami/minio:latest
    container_name: minio
    env_file: .env
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_USE_SSL
      - MINIO_DEFAULT_BUCKETS
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  backend:
    image: ghcr.io/k5sha/ticketo-backend:latest
    container_name: ticketo-api
    env_file: .env
    environment:
      - ENV
      - ADDR
      - EXTERNAL_URL
      - FRONTEND_URL
      - DB_ADDR
      - AUTH_BASIC_USERNAME
      - AUTH_BASIC_PASSWORD
      - AUTH_TOKEN_SECRET
      - AUTH_TOKEN_EXPIRATION
      - AUTH_TOKEN_HOST
      - MAIL_TOKEN_EXPIRATION
      - MAIL_FROM_EMAIL
      - MAILTRAP_API_KEY
      - S3_BUCKET_NAME
      - MINIO_ENDPOINT
      - MINIO_ENDPOINT_PUBLIC
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_SSL
      - PAYMENT_PUBLIC_KEY
      - PAYMENT_PRIVATE_KEY
      - PAYMENT_FRONTEND_URL
      - PAYMENT_SERVER_URL
    ports:
      - "8080:8080"
    depends_on:
      - db
      - minio
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/health"]
      interval: 30s
      retries: 3
      timeout: 5s

  frontend:
    image: ghcr.io/k5sha/ticketo-frontend:latest
    container_name: ticketo-frontend
    env_file: .env
    environment:
      - VITE_API_URL
      - VITE_APP_NAME
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - minio
    restart: on-failure
    networks:
      - app-network

volumes:
  db-data:
  minio_data:

networks:
  app-network:
    driver: bridge